searchState.loadedDescShard("convey_rs", 0, "Contains the error value\nEstablishes a minimum version to support which is …\nContains the success value\nExtends <code>byteorder</code>’s <code>ReadBytesExt</code> (which itself extends …\nReads an object of type <code>Actor</code>’s header\nReads an array property\nReads an array property whose element is of type struct\nReads a chunk header and its compressed body, performing …\nReads a chunk at a time until reaching the specified stop …\nReads an RGB color with alpha channel with values as …\nReads an RGB color with alpha channel with values as bytes\nReads an object of type <code>Component</code>’s header\nThe only entry point to this library. Given a Path or …\nReads a FicsIt-Network Lua processor state storage\nReads a FicsIt-Network Network trace\nReads a FicsIt-Network GPUT buffer pixel\nReads the file header; some of its fields, particularly …\nReads a specified number of bytes and attempts to parse …\nReads a string whose length and encoding are specified by …\nReads a single level by reading its name, object headers, …\nReads an object header for a level object by reading a …\nReads a 32-bit integer to determine the number of levels …\nReads a map property\nReads an object by reading its meta followed by its …\nGiven a type which implements <code>ObjectReferrable</code>, reads a …\nReads the partition objects which start the main body and …\nReads a property\nReads a byte flag to determine if the following 16 bytes …\nReads a quaternion with values as 32-bit floats\nReads a quaternion with values as 64-bit floats\nReads a set property\nReads a struct property\nReads a text property\nReads a 3D vector with values as 32-bit floats\nReads a 2D vector with values as 64-bit floats\nReads a 2D vector with values as 32-bit integers\nReads a 4D vector with values as 64-bit floats\nReads a 4D vector with values as 32-bit integers\nReads a 3D vector with values as 64-bit floats\nReads a 3D vector with values as 32-bit integers\nSimilar to the above except the string is skipped over …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA container is needed for these types because many fields …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")